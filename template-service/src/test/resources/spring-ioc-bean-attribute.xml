<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd" default-init-method="">
    <!--
        1、定义bean，通过属性setter方法注入值
        2、bean可以不指定id、name属性，如果没有指定id、取name属性配置的第一个名称作为id，再name属性没有配置，则会自动生成classname#序号（例如：0，1）
        3、Spring 5.x xml配置中已省略singleton这个bean属性，但是程序中兼容此配置，优先级：single>scope
        4、autowire-candidate：false表示该bean不参与自动注入功能
        5、primary:该属性指定同一类型多个bean时，指定匹配优先级
        6、autowire属性可配置值有no、byType、byName、constructor、autodetect，默认为no
        7、bean配置的init-method属性会覆盖beans标签中default-init-method属性，类似配置如：destroy-method
        8、bean子属性property中不能同时存在ref和value两个属性
        9、一个Bean定义中只允许指定类型不同的<qualifier>，如果有多个相同type后面指定的将覆盖前面的，类似@Qualifier注解指定注入的特定bean实例。
        10、定义abstract的bean不能直接初始化
        11、depends-on配置初始化时需要依赖的bean，这些bean优先初始化
    -->
    <bean id="oneIoc" class="ioc.SpringIoc" autowire="byName" autowire-candidate="false" scope="singleton"/>

    <!--此处通过primary属性标签配置自动匹配同类型优先级，如果出现多个同类型的Bean，又其他Bean没有标志primary属性，则此Bean优先注入-->
    <bean id="twoIoc" class="ioc.SpringIoc" primary="true">
        <property name="name" value="twoIoc"/>
    </bean>

    <bean id="springIocFactory" class="ioc.SpringIocFactory"/>

    <!--通过工厂方法创建bean实例-->
    <bean id="threeIoc" class="ioc.SpringIoc" factory-bean="springIocFactory" factory-method="instance"/>

    <!--定义抽象Spring Bean实例-->
    <bean id="abstractSpringIocContext" class="ioc.AbstractSpringIocContext" abstract="true"/>

    <!--定义依赖bean-->
    <bean id="depond" class="ioc.DependsOn"/>

    <!--这里bean标签标红，不代表配置出错，因为oneIoc这个bean实例配置了autowire-candidate这个属性值为false，代表其不参与自动注入-->
    <bean id="context" class="ioc.SpringIocContext" autowire="byType" depends-on="depond" parent="abstractSpringIocContext"/>

</beans>